#!/usr/bin/env python
# -*- coding: utf8 -*-
from simple_backup.app.backup import backup_db, backup_db_per_table
import argparse
import ConfigParser
import sys

def main():
    name = 'simple_backup.conf'
    conf_path = '/etc/simple_backup/'
    section = 'mysql'
    config = ConfigParser.ConfigParser()
    config.read(conf_path+name)
    HR_NUM_COPY = config.getint(section, 'HR_NUM_COPY')
    DL_NUM_COPY = config.getint(section, 'DL_NUM_COPY')
    WK_NUM_COPY = config.getint(section, 'WK_NUM_COPY')
    MN_NUM_COPY = config.getint(section, 'MN_NUM_COPY')
    parser = argparse.ArgumentParser(description='Simple Mysql Backup option names')
    group1 = parser.add_mutually_exclusive_group()
    group1.add_argument('-D', '--dump', action="count", dest="dump", help='Backup type is DUMP')
    group1.add_argument('-H', '--hotcopy', action="count", dest="hotcopy", help='Backup type is Hotcopy')
    group1.add_argument('-T', '--tables', action="count", dest="dump_per_table", help='Backup type is Dump per table')
    group1.add_argument('-V', '--version', action="count", dest="version", help='Show current version')
    group2 = parser.add_mutually_exclusive_group()
    group2.add_argument('-hr', '--hour', action="count", dest="hour", help='Hour backup')
    group2.add_argument('-d', '--day', action="count",  dest="day", help='Day backup')
    group2.add_argument('-w', '--week', action="count",  dest="week", help='Week backup')
    group2.add_argument('-m', '--month', action="count",  dest="month", help='Month backup')
    results = parser.parse_args()
    if results.dump:
        if results.hour:
            results = backup_db('hr_', HR_NUM_COPY, 'dump')
            print >> sys.stdout, results
        elif results.day:
            results = backup_db('dl_', DL_NUM_COPY, 'dump')
            print >> sys.stdout, results
        elif results.week:
            results = backup_db('wk_', WK_NUM_COPY, 'dump')
            print >> sys.stdout, results

        elif results.month:
            results = backup_db('mnt_', MN_NUM_COPY, 'dump')
            print >> sys.stdout, results
        else:
            print parser.print_help()
    elif results.hotcopy:
        if results.hour:
            results = backup_db('hr_', HR_NUM_COPY, 'hotcopy')
            print >> sys.stdout, results
        elif results.day:
            results = backup_db('dl_', DL_NUM_COPY, 'hotcopy')
            print >> sys.stdout, results
        elif results.week:
            results = backup_db('wk_', WK_NUM_COPY, 'hotcopy')
            print >> sys.stdout, results
        elif results.month:
            results = backup_db('mnt_', MN_NUM_COPY, 'hotcopy')
            print >> sys.stdout, results
        else:
            print parser.print_help()
    elif results.dump_per_table:
        if results.hour:
            results = backup_db_per_table('hr_', HR_NUM_COPY, 'dump')
            print >> sys.stdout, results
        elif results.day:
            results = backup_db_per_table('dl_', DL_NUM_COPY, 'dump')
            print >> sys.stdout, results
        elif results.week:
            results = backup_db_per_table('wk_', WK_NUM_COPY, 'dump')
            print >> sys.stdout, results
        elif results.month:
            results = backup_db_per_table('mnt_', MN_NUM_COPY, 'dump')
            print >> sys.stdout, results
        else:
            print parser.print_help()
    elif results.version:
        print >> sys.stdout, "v0.1.4"
    else:
        print parser.print_help()

if __name__ == "__main__":
    main()